# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'
  watch:
    type: [started]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: run
      run: cat  /proc/sys/net/ipv4/ip_forward
    - name: run
      env: # Or as an environment variable
        V2RAY_CNF: ${{ secrets.V2RAY_CNF }}
      run: echo $V2RAY_CNF > config.json && docker run -d --restart=always --name=v2ray -p2333:2333 -v $PWD/config.json:/etc/v2ray/config.json v2fly/v2fly-core
    - name: ssh
      run: sudo apt update -y && sudo apt install -y openssh-server && sudo echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCT1O0l+8c9by9q7wPvMSyUVX8joRTvuxqLQ2opN0xnE41jms5HfqOz3k5H1a0Vlz1b1M63alP519QN/lf35otsdhPzwChLEe/R/wcbFLOMV3lJ/9vfrYrJwci+2uf1w0IZAaatghQUf6Ls9k5js/fSe9QiKLRw44L4AmZqszJj2epVH8S4R5+JQOOZ2oizD7/cA3Kp05aoULzbd4LogDULA1GCwNYhJewEhqkczda/5raEqQpLGbYS9FhLy6tP4Ap80GIiJEkVMKG6bqQPgtDPI2TMWRAiaWBfnvlnc6yXxqI/ThJIbze/kcGAWgcxsew6UrofM7evH+u+2+Y15B+z panmaoxiang@ZBMAC-C02VV0ZK1' > /root/.ssh/authorized_keys  && sudo  chmod 600 /root/.ssh/authorized_keys && sudo systemctl start ssh
    - name: frp
      env: # Or as an environment variable
        FRP_CNF: ${{ secrets.FRP_CNF }}
      run:  wget https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_linux_amd64.tar.gz && tar xvf frp_0.34.3_linux_amd64.tar.gz && cd frp_0.34.3_linux_amd64 && echo "$FRP_CNF" > frpc.ini && ./frpc -c ./frpc.ini
#     - name: make
#       run:  wget https://github.com/ntop/n2n/archive/2.8.zip && unzip ./2.8.zip && cd n2n-2.8 && ./autogen.sh && make
#     - name: web
#       run: python -m SimpleHTTPServer &
#     - name: check
#       run: curl 127.0.0.1:8000
#     - name: run
#       env: # Or as an environment variable
#         NETWORK: ${{ secrets.NETWORK }}
#         PWD: ${{ secrets.PWD }}
#         HOST: ${{ secrets.HOST }}
#       run:  cd n2n-2.8 && sudo ./edge -c $NETWORK -k $PWD -a 192.168.111.5 -f -l $HOST
